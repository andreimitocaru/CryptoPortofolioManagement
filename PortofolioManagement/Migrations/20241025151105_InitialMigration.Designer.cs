// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortofolioManagement.DbModels;

#nullable disable

namespace PortofolioManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241025151105_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PortofolioManagement.DbModels.CryptoPriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CryptocurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PriceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CryptocurrencyId");

                    b.ToTable("CryptoPriceHistories");
                });

            modelBuilder.Entity("PortofolioManagement.DbModels.Cryptocurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cryptocurrencies");
                });

            modelBuilder.Entity("PortofolioManagement.DbModels.Investment", b =>
                {
                    b.Property<int>("InvestmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvestmentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CryptoCurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<int>("PortofolioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ROI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InvestmentId");

                    b.HasIndex("CryptoCurrencyId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("PortofolioManagement.DbModels.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("PortofolioManagement.DbModels.CryptoPriceHistory", b =>
                {
                    b.HasOne("PortofolioManagement.DbModels.Cryptocurrency", null)
                        .WithMany("PriceHistories")
                        .HasForeignKey("CryptocurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PortofolioManagement.DbModels.Investment", b =>
                {
                    b.HasOne("PortofolioManagement.DbModels.Cryptocurrency", "Cryptocurrency")
                        .WithMany()
                        .HasForeignKey("CryptoCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortofolioManagement.DbModels.Portfolio", null)
                        .WithMany("Investments")
                        .HasForeignKey("PortfolioId");

                    b.Navigation("Cryptocurrency");
                });

            modelBuilder.Entity("PortofolioManagement.DbModels.Cryptocurrency", b =>
                {
                    b.Navigation("PriceHistories");
                });

            modelBuilder.Entity("PortofolioManagement.DbModels.Portfolio", b =>
                {
                    b.Navigation("Investments");
                });
#pragma warning restore 612, 618
        }
    }
}
